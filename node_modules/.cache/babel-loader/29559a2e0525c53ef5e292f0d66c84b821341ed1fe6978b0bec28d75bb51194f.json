{"ast":null,"code":"const boardsize = 80;\nconst __default__ = {\n  data() {\n    return {};\n  },\n  methods: {\n    printId(key) {\n      console.log(key);\n    }\n  }\n};\nimport { useCssVars as _useCssVars } from 'vue';\nconst __injectCSSVars__ = () => {\n  _useCssVars(_ctx => ({\n    \"e1ee1034-boardsize\": _ctx.boardsize\n  }));\n};\nconst __setup__ = __default__.setup;\n__default__.setup = __setup__ ? (props, ctx) => {\n  __injectCSSVars__();\n  return __setup__(props, ctx);\n} : __injectCSSVars__;\nexport default __default__;","map":{"version":3,"names":["boardsize","__default__","data","methods","printId","key","console","log"],"sources":["/home/atoste/chessFrontend/src/components/Board.vue"],"sourcesContent":["<template>\n        <div class=\"chessBoard\">\n        <div v-for=\"n in 64\" v-bind:key=\"((8-Math.floor((n-1)/8)) + 10 * ((n-1)%8 + 1))\" :class=\"{buttonWhite: (8-Math.floor((n-1)/8)+ ((n-1)%8 + 1) ) % 2 == 0, buttonBlack: (8-Math.floor((n-1)/8)+ ((n-1)%8 + 1) ) % 2 == 1}\"   @click=\"printId(((8-Math.floor((n-1)/8)) + 10 * ((n-1)%8 + 1)))\"></div>\n        </div>\n</template>\n\n<script>\n    const boardsize = 80; \n    export default{\n        data(){\n            return {\n            }\n        },\n        methods:{\n            printId(key){\n                console.log(key)\n            }\n        }\n    }\n</script>\n\n<style>\n.buttonWhite {\n    border: 1px outset gray;\n    background-color: white;\n    width: min(12.5vh, 12.5vw);\n    height: min(12.5vh, 12.5vw);\n    cursor:pointer;\n}\n.buttonBlack {\n    border: 1px outset gray;\n    background-color: black;\n    width: min(12.5vh, 12.5vw);\n    height: min(12.5vh, 12.5vw);\n    cursor:pointer;\n}\n.chessBoard{\n    width: min(v-bind(boardsize)vh, 100vw);\n    height: min(100vh, 100vw);\n    margin-left: auto;\n    margin-right: auto;\n    background: brown;\n    display: grid;\n    grid-template-columns: repeat(8,1fr);\n}\n\n\n</style>\n\n"],"mappings":"AAOI,MAAMA,SAAQ,GAAI,EAAE;AACpB,MAAKC,WAAS;EACVC,IAAIA,CAAA,EAAE;IACF,OAAO,CACP;EACJ,CAAC;EACDC,OAAO,EAAC;IACJC,OAAOA,CAACC,GAAG,EAAC;MACRC,OAAO,CAACC,GAAG,CAACF,GAAG;IACnB;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}