{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"chessBoard\"\n};\nconst _hoisted_2 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [(_openBlock(), _createElementBlock(_Fragment, null, _renderList(64, n => {\n    return _createElementVNode(\"div\", {\n      key: 8 - Math.floor((n - 1) / 8) + 10 * ((n - 1) % 8 + 1),\n      class: _normalizeClass({\n        buttonWhite: (8 - Math.floor((n - 1) / 8) + ((n - 1) % 8 + 1)) % 2 == 0,\n        buttonBlack: (8 - Math.floor((n - 1) / 8) + ((n - 1) % 8 + 1)) % 2 == 1\n      }),\n      onClick: $event => $options.printId(8 - Math.floor((n - 1) / 8) + 10 * ((n - 1) % 8 + 1))\n    }, null, 10 /* CLASS, PROPS */, _hoisted_2);\n  }), 64 /* STABLE_FRAGMENT */))]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_Fragment","_renderList","n","_createElementVNode","key","Math","floor","_normalizeClass","buttonWhite","buttonBlack","onClick","$event","$options","printId"],"sources":["/home/atoste/chessFrontend/src/components/Board.vue"],"sourcesContent":["<template>\n        <div class=\"chessBoard\">\n        <div v-for=\"n in 64\" v-bind:key=\"((8-Math.floor((n-1)/8)) + 10 * ((n-1)%8 + 1))\" :class=\"{buttonWhite: (8-Math.floor((n-1)/8)+ ((n-1)%8 + 1) ) % 2 == 0, buttonBlack: (8-Math.floor((n-1)/8)+ ((n-1)%8 + 1) ) % 2 == 1}\"   @click=\"printId(((8-Math.floor((n-1)/8)) + 10 * ((n-1)%8 + 1)))\"></div>\n        </div>\n</template>\n\n<script>\n    const boardsize = 100; \n    export default{\n        data(){\n            return {\n            }\n        },\n        methods:{\n            printId(key){\n                console.log(key)\n            }\n        }\n    }\n</script>\n\n<style>\n.buttonWhite {\n    border: 1px outset gray;\n    background-color: white;\n    width: min(12.5vh, 12.5vw);\n    height: min(12.5vh, 12.5vw);\n    cursor:pointer;\n}\n.buttonBlack {\n    border: 1px outset gray;\n    background-color: black;\n    width: min(12.5vh, 12.5vw);\n    height: min(12.5vh, 12.5vw);\n    cursor:pointer;\n}\n.chessBoard{\n    width: min(v-bind(boardsize)vh, 100vw);\n    height: min(100vh, 100vw);\n    margin-left: auto;\n    margin-right: auto;\n    background: brown;\n    display: grid;\n    grid-template-columns: repeat(8,1fr);\n}\n\n\n</style>\n\n"],"mappings":";;EACaA,KAAK,EAAC;AAAY;;;uBAAvBC,mBAAA,CAEM,OAFNC,UAEM,I,cADND,mBAAA,CAAkSE,SAAA,QAAAC,WAAA,CAAjR,EAAE,EAAPC,CAAC;WAAbC,mBAAA,CAAkS;MAAtQC,GAAG,MAAMC,IAAI,CAACC,KAAK,EAAEJ,CAAC,oBAAiBA,CAAC;MAAcL,KAAK,EAAAU,eAAA;QAAAC,WAAA,OAAmBH,IAAI,CAACC,KAAK,EAAEJ,CAAC,eAAUA,CAAC;QAAAO,WAAA,OAAuCJ,IAAI,CAACC,KAAK,EAAEJ,CAAC,eAAUA,CAAC;MAAA;MAA2BQ,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAC,OAAO,KAAKR,IAAI,CAACC,KAAK,EAAEJ,CAAC,oBAAiBA,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}