{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Board = _resolveComponent(\"Board\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_Board, {\n    position: $data.position\n  }, null, 8 /* PROPS */, [\"position\"]), _createElementVNode(\"div\", null, [_createElementVNode(\"h1\", null, _toDisplayString($data.position), 1 /* TEXT */)])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createVNode","_component_Board","position","$data","_createElementVNode","_toDisplayString"],"sources":["/home/atoste/chessFrontend/src/components/Chess.vue"],"sourcesContent":["<template>\n\n    <Board :position=\"position\"></Board>\n    <div>\n        \n        <h1>{{ position }}</h1>\n\n    </div>\n</template>\n\n<script>\n    import ChessService from '../services/ChessService'\n    import Board from './Board.vue';\n    export default{\n        name: '',\n        data(){\n            return { position: '',\n        }\n        },\n        components:{\n            Board,\n        },\n        methods: {\n            getPosition(){\n                ChessService.getPosition().then((response) =>{\n                    if(response.status == 200){\n                    this.position = response.data;\n                }\n                })\n            }\n        },  \n        created(){\n            this.getPosition();\n        }\n    }\n</script>\n"],"mappings":";;;6DAEIA,YAAA,CAAoCC,gBAAA;IAA5BC,QAAQ,EAAEC,KAAA,CAAAD;EAAQ,uCAC1BE,mBAAA,CAIM,cAFFA,mBAAA,CAAuB,YAAAC,gBAAA,CAAhBF,KAAA,CAAAD,QAAQ,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}