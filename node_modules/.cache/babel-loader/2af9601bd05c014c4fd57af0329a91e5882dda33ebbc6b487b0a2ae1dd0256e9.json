{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"input\", {\n  type: \"number\"\n}, null, -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Board = _resolveComponent(\"Board\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_Board, {\n    position: $data.position,\n    checkmateWhite: $data.checkmateWhite,\n    checkmateBlack: $data.checkmateBlack\n  }, null, 8 /* PROPS */, [\"position\", \"checkmateWhite\", \"checkmateBlack\"]), _hoisted_1]);\n}","map":{"version":3,"names":["_createElementVNode","type","_createElementBlock","_createVNode","_component_Board","position","$data","checkmateWhite","checkmateBlack","_hoisted_1"],"sources":["/home/atoste/chessFrontend/src/components/Chess.vue"],"sourcesContent":["<template>\n\n   \n    <div>\n        <Board :position=\"position\" :checkmateWhite=\"checkmateWhite\" :checkmateBlack=\"checkmateBlack\"></Board>\n        <input type=\"number\"/>\n    </div>\n</template>\n\n<script>\n    import ChessService from '../services/ChessService'\n    import Board from './Board.vue';\n    export default{\n        name: '',\n        data(){\n            return { \n                position: \"\",\n                checkmateWhite: false,\n                checkmateBlack: false\n                    \n        }\n        },\n        components:{\n            Board,\n        },\n        methods: {\n            getPosition(){\n                ChessService.getPosition().then((response) =>{\n                    if(response.status == 200){\n                    this.position = response.data.position;\n                    this.checkmateBlack = response.data.checkmateBlack;\n                    this.checkmateWhite = response.data.checkmateWhite;\n                }\n                })\n            },\n            undo(val){\n                ChessService.undo(val);\n            }\n        },  \n        created(){\n            this.getPosition();\n        }\n    }\n</script>\n"],"mappings":";gCAKQA,mBAAA,CAAsB;EAAfC,IAAI,EAAC;AAAQ;;;;uBAFxBC,mBAAA,CAGM,cAFFC,YAAA,CAAsGC,gBAAA;IAA9FC,QAAQ,EAAEC,KAAA,CAAAD,QAAQ;IAAGE,cAAc,EAAED,KAAA,CAAAC,cAAc;IAAGC,cAAc,EAAEF,KAAA,CAAAE;6EAC9EC,UAAsB,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}