{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createVNode as _createVNode, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"chessBoard\"\n};\nconst _hoisted_2 = [\"onClick\"];\nconst _hoisted_3 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Piece = _resolveComponent(\"Piece\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", _hoisted_1, [(_openBlock(), _createElementBlock(_Fragment, null, _renderList(64, n => {\n    return _createElementVNode(\"div\", {\n      key: $options.getKey(n),\n      class: _normalizeClass({\n        buttonBlack: $options.getStyle(n) == 0,\n        buttonWhite: $options.getStyle(n) == 1,\n        buttonBlackHighlighted: $options.getStyle(n) == 2,\n        buttonWhiteHighlighted: $options.getStyle(n) == 3,\n        buttonBlackPossible: $options.getStyle(n) == 4,\n        buttonWhitePossible: $options.getStyle(n) == 5\n      }),\n      style: {\n        \"display\": \"flex\",\n        \"justify-content\": \"center\",\n        \"align-items\": \"center\"\n      },\n      onClick: $event => $options.move($options.getKey(n))\n    }, [_createVNode(_component_Piece, {\n      id: $options.getKey(n),\n      ref_for: true,\n      ref: 'piece' + $options.getKey(n),\n      type: $options.positionList[n - 1],\n      index: n\n    }, null, 8 /* PROPS */, [\"id\", \"type\", \"index\"])], 10 /* CLASS, PROPS */, _hoisted_2);\n  }), 64 /* STABLE_FRAGMENT */))]), false ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createElementVNode(\"h1\", null, _toDisplayString(this.positionList), 1 /* TEXT */), _createElementVNode(\"h1\", null, _toDisplayString(this.position), 1 /* TEXT */), _createElementVNode(\"h1\", null, _toDisplayString(this.checkmateWhite ? 'white' : 'not white'), 1 /* TEXT */), _createElementVNode(\"h1\", null, _toDisplayString(this.checkmateBlack ? 'black' : 'not black'), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementVNode","_hoisted_1","_createElementBlock","_Fragment","_renderList","n","key","$options","getKey","_normalizeClass","getStyle","buttonWhite","buttonWhiteHighlighted","buttonWhitePossible","style","onClick","$event","move","_createVNode","_component_Piece","id","ref","type","positionList","index","_hoisted_3","_toDisplayString","position","checkmateWhite","checkmateBlack"],"sources":["/home/atoste/chessFrontend/src/components/Board.vue"],"sourcesContent":["<template>\n        <div class=\"chessBoard\">\n            <div v-for=\"n in 64\" v-bind:key=\"getKey(n)\" :class=\"{\n                    buttonBlack: (getStyle(n)) == 0, buttonWhite:(getStyle(n)) == 1,\n                    buttonBlackHighlighted: (getStyle(n)) == 2, buttonWhiteHighlighted: (getStyle(n)) == 3,\n                    buttonBlackPossible: (getStyle(n)) == 4, buttonWhitePossible: (getStyle(n)) == 5\n                }\" style=\"display:flex; justify-content:center; align-items:center\"   @click=\"move(getKey(n))\">\n            <Piece :id=\"getKey(n)\" :ref=\"'piece' + getKey(n)\" :type=\"positionList[n-1]\" :index=\"n\"></Piece>\n            </div>\n        </div>\n        <div v-if=\"false\">\n            <h1>{{ this.positionList }}</h1>\n            <h1>{{ this.position }}</h1>\n            <h1> {{ this.checkmateWhite ? 'white' : 'not white' }}</h1>\n            <h1>{{ this.checkmateBlack ? 'black' : 'not black' }}</h1>\n        </div>\n\n\n</template>\n\n<script>\n    import ChessService from '../services/ChessService'\n    import Piece from './Piece.vue'\n    const PieceType = {\n        None: 0,\n        WPawn: 1,\n        WRook: 2,\n        WKnight: 3,\n        WBishop: 4,\n        WQueen: 5,\n        WKing: 6,\n        BPawn: 11,\n        BRook: 12,\n        BKnight: 13,\n        BBishop: 14,\n        BQueen: 15,\n        BKing: 16,\n        Promotion: 17,\n\n    }\n    export default{\n        name: '',\n        data(){\n            return {\n                promotion: -1,\n                trigger: 0,\n                promotedPiece: -1\n            }\n        },\n        props:{\n            position: String,\n            checkmateBlack: Boolean,\n            checkmateWhite: Boolean,\n            highlight: Number,\n            possibleMoves: Array\n        },\n        components:{\n            Piece\n        },\n        methods:{\n            printId(key){\n                console.log(key);\n            },\n            move(move){\n                var isWhite;\n                /*if(this.ref['piece' + this.highlight].PieceType == 1){\n                    isWhite = true;\n                }\n                else if(this.ref['piece' + this.highlight].PieceType == 11){\n                    isWhite = false;\n                }\n                else{\n                    this.$parent.move(move);\n                }\n                if(this.getKey(move) < 19 || this.getKey(move) > 80){\n                    this.ref['piece' + this.move].PieceType = 17;\n                    // var promotion = await this.ref['piece' + this.move].getPromotion();\n                }*/\n                if(typeof this.highlight !== 'undefined'){\n                    console.log(this.$refs)\n                    if(this.highlight != null && [9,11,1].includes(Math.abs(move-this.highlight)) && (move%10)%7 == 1){\n                        if(typeof (this.$refs['piece' + this.highlight]) !== 'undefined' && (this.$refs['piece' + this.highlight])[0].type%10 == 1){\n                            this.promotedPiece = -1;\n                            this.promotion = (this.$refs['piece' + move])[0].index - 1;\n                            // added unwatch\n                            const unwatch = this.$watch('promotedPiece', (newVal, oldVal) => {this.$parent.move(move, newVal);unwatch();});\n                            this.trigger++;\n\n                        }\n                        else{\n                        this.$parent.move(move, 3);}\n                    }\n                    else{\n                        this.$parent.move(move, 3);\n                    }\n                }\n                else{\n                    this.$parent.move(move, 3);\n                }\n            },\n            // this will get the key of the element, since this renders from up do down, 1 will be 18, 2 will be 28 etc...\n            getKey(n){\n                return ((8-Math.floor((n-1)/8)) + 10 * ((n-1)%8 + 1));\n            },\n            getStyle(n){\n                const key = this.getKey(n);\n                var white = (this.getKey(n) % 10 + (this.getKey(n)-this.getKey(n) % 10) / 10)%2;\n                if(this.highlight != undefined && this.highlight != 0 && key == this.highlight){\n                    white += 2;\n                }\n                if(this.possibleMoves.includes(key)){\n                    white += 4;\n                }\n                return white;\n            },\n            setPromotedPiece(nr){\n                this.promotedPiece = nr;\n            }\n        },\n        computed:{\n            positionList: {\n                get(){\n                    console.log(this.trigger);\n                    if(this.position == \"\"){\n                        return [];\n                    }\n                    var returner = Array(64);\n                    const size = this.position.length;\n                    var i = 0;\n                    var decrement = 0;\n                    var promot = false;\n                    while(i < size){\n                        if(i-decrement == this.promotion){\n                            promot = true;\n                        }   \n                        switch(this.position[i]){\n                            case '/':\n                                promot = false;\n                                i++;\n                                decrement++;\n                                break;\n                            case 'p':\n                                returner[i-decrement] = PieceType.BPawn;\n                                i++;\n                                break;\n                            case 'P':\n                                returner[i-decrement] = PieceType.WPawn;\n                                i++;\n                                break;\n                            case 'r':\n                                returner[i-decrement] = PieceType.BRook;\n                                i++;\n                                break;\n                            case 'R':\n                                returner[i-decrement] = PieceType.WRook;\n                                i++;\n                                break;\n                            case 'n':\n                                returner[i-decrement] = PieceType.BKnight;\n                                i++;\n                                break;\n                            case 'N':\n                                returner[i-decrement] = PieceType.WKnight;\n                                i++;\n                                break;\n                            case 'b':\n                                returner[i-decrement] = PieceType.BBishop;\n                                i++;\n                                break;\n                            case 'B':\n                                returner[i-decrement] = PieceType.WBishop;\n                                i++;\n                                break;\n                            case 'q':\n                                returner[i-decrement] = PieceType.BQueen;\n                                i++;\n                                break;\n                            case 'Q':\n                                returner[i-decrement] = PieceType.WQueen;\n                                i++;\n                                break;\n                            case 'k':\n                                returner[i-decrement] = PieceType.BKing;\n                                i++;\n                                break;\n                            case 'K':\n                                returner[i-decrement] = PieceType.WKing;\n                                i++;\n                                break;\n                            default:\n                                var iter = 0;\n                                while(parseInt(this.position[i]) > iter){\n                                    \n                                    returner[i-decrement] = PieceType.None;\n                                    if(i-decrement == this.promotion){\n                                        returner[i-decrement] = PieceType.Promotion;\n                                        promot = false;\n                                    }   \n                                    decrement--;\n                                    iter++;\n                                }\n                                decrement++;\n                                i++;\n                                break;\n                        }\n                        if(promot){\n                            returner[i-decrement - 1] = PieceType.Promotion;\n                            promot=false;\n                        }   \n                    }\n                    return returner;\n                }\n        }\n        }\n        \n    }\n</script>\n\n<style>\n.buttonWhite {\n    border: 1px outset gray;\n    background-color: white;\n    width: min(12.5vh, 12.5vw);\n    height: min(12.5vh, 12.5vw);\n    cursor:pointer;\n    display: flex;\n}\n.buttonBlack {\n    border: 1px outset gray;\n    background-color: rgb(41, 41, 87);\n    width: min(12.5vh, 12.5vw);\n    height: min(12.5vh, 12.5vw);\n    cursor:pointer;\n    display: flex;\n}\n.buttonWhiteHighlight {\n    border: 1px outset gray;\n    background-color: rgb(163, 163, 163);\n    width: min(12.5vh, 12.5vw);\n    height: min(12.5vh, 12.5vw);\n    cursor:pointer;\n    display: flex;\n}\n.buttonBlackHighlight {\n    border: 1px outset gray;\n    background-color: rgb(87, 87, 194);\n    width: min(12.5vh, 12.5vw);\n    height: min(12.5vh, 12.5vw);\n    cursor:pointer;\n    display: flex;\n}\n.buttonWhitePossible {\n    border: 1px outset gray;\n    background-color: rgba(255, 255, 255, 0.815);\n    width: min(12.5vh, 12.5vw);\n    height: min(12.5vh, 12.5vw);\n    cursor:pointer;\n    display: flex;\n}\n.buttonBlackPossible {\n    border: 1px outset gray;\n    background-color: rgba(41, 41, 87, 0.76);\n    width: min(12.5vh, 12.5vw);\n    height: min(12.5vh, 12.5vw);\n    cursor:pointer;\n    display: flex;\n}\n.chessBoard{\n    width: min(100vh, 100vw);\n    height: min(100vh, 100vw);\n    margin-left: auto;\n    margin-right: auto;\n    background: brown;\n    display: grid;\n    grid-template-columns: repeat(8,1fr);\n}\n\n\n</style>\n\n"],"mappings":";;EACaA,KAAK,EAAC;AAAY;;;;;;;6DAAvBC,mBAAA,CAQM,OARNC,UAQM,I,cAPFC,mBAAA,CAMMC,SAAA,QAAAC,WAAA,CANW,EAAE,EAAPC,CAAC;WAAbL,mBAAA,CAMM;MANsBM,GAAG,EAAEC,QAAA,CAAAC,MAAM,CAACH,CAAC;MAAIN,KAAK,EAAAU,eAAA;qBAAsCF,QAAA,CAAAG,QAAQ,CAACL,CAAC;QAAAM,WAAA,EAAsBJ,QAAA,CAAAG,QAAQ,CAACL,CAAC;gCAAsDE,QAAA,CAAAG,QAAQ,CAACL,CAAC;QAAAO,sBAAA,EAAkCL,QAAA,CAAAG,QAAQ,CAACL,CAAC;6BAAmDE,QAAA,CAAAG,QAAQ,CAACL,CAAC;QAAAQ,mBAAA,EAA+BN,QAAA,CAAAG,QAAQ,CAACL,CAAC;;MAI7US,KAAgE,EAAhE;QAAA;QAAA;QAAA;MAAA,CAAgE;MAAIC,OAAK,EAAAC,MAAA,IAAET,QAAA,CAAAU,IAAI,CAACV,QAAA,CAAAC,MAAM,CAACH,CAAC;QAC/Fa,YAAA,CAA+FC,gBAAA;MAAvFC,EAAE,EAAEb,QAAA,CAAAC,MAAM,CAACH,CAAC;;MAAIgB,GAAG,YAAYd,QAAA,CAAAC,MAAM,CAACH,CAAC;MAAIiB,IAAI,EAAEf,QAAA,CAAAgB,YAAY,CAAClB,CAAC;MAAMmB,KAAK,EAAEnB;;oCAG7E,KAAK,I,cAAhBH,mBAAA,CAKM,OAAAuB,UAAA,GAJFzB,mBAAA,CAAgC,YAAA0B,gBAAA,MAApBH,YAAY,kBACxBvB,mBAAA,CAA4B,YAAA0B,gBAAA,MAAhBC,QAAQ,kBACpB3B,mBAAA,CAA2D,YAAA0B,gBAAA,MAA9CE,cAAc,0CAC3B5B,mBAAA,CAA0D,YAAA0B,gBAAA,MAA9CG,cAAc,yC"},"metadata":{},"sourceType":"module","externalDependencies":[]}