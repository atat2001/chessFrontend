{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Board = _resolveComponent(\"Board\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [this.checkmate ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_Board, {\n    position: $data.position,\n    checkmateWhite: $data.checkmateWhite,\n    checkmateBlack: $data.checkmateBlack,\n    highlight: $data.highlight,\n    possibleMoves: $data.possibleMoves\n  }, null, 8 /* PROPS */, [\"position\", \"checkmateWhite\", \"checkmateBlack\", \"highlight\", \"possibleMoves\"])])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = $event => $options.undo(1))\n  }, \"undo\"), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.age = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.age, void 0, {\n    number: true\n  }]]), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = $event => $options.save())\n  }, \"save\"), _createElementVNode(\"div\", null, [$data.checkmateWhite ? (_openBlock(), _createElementBlock(\"h1\", _hoisted_2, \"congratulations white\")) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", null, [$data.checkmateBlack ? (_openBlock(), _createElementBlock(\"h1\", _hoisted_3, \"congratulations black\")) : _createCommentVNode(\"v-if\", true)])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["checkmate","_createElementBlock","_hoisted_1","_createVNode","_component_Board","position","$data","checkmateWhite","checkmateBlack","highlight","possibleMoves","_createElementVNode","onClick","_cache","$event","$options","undo","_ctx","age","save","_hoisted_2","_hoisted_3"],"sources":["/home/atoste/chessFrontend/src/components/Chess.vue"],"sourcesContent":["<template>\n    <div v-if=\"this.checkmate\">\n        <Board :position=\"position\" :checkmateWhite=\"checkmateWhite\" :checkmateBlack=\"checkmateBlack\" :highlight=\"highlight\" :possibleMoves=\"possibleMoves\"></Board>\n    </div>\n    <button @click=\"undo(1)\">undo</button>\n    <input v-model.number=\"age\" />\n    <button @click=\"save()\">save</button>\n\n    <div> <h1 v-if=\"checkmateWhite\">congratulations white</h1></div>\n    <div> <h1 v-if=\"checkmateBlack\">congratulations black</h1></div>\n</template>\n\n<script>\n    import ChessService from '../services/ChessService'\n    import Board from './Board.vue';\n    export default{\n        name: '',\n        data(){\n            return { \n                position: \"\",\n                checkmateWhite: false,\n                checkmateBlack: false,\n                submiter: Number,\n                possibleMoves: [],\n                highlight: 0,\n                    \n        }\n        },\n        components:{\n            Board,\n        },\n        methods: {\n            getPosition(){\n                ChessService.getPosition().then((response) =>{\n                    if(response.status == 200){\n                    this.position = response.data.position;\n                    this.checkmateBlack = response.data.checkmateBlack;\n                    this.checkmateWhite = response.data.checkmateWhite;\n                }\n                })\n            },\n            save(){\n                ChessService.save().then((response) => {if(response.status != 200){\n                    console.error();\n                }});\n            },\n            async undo(val){\n                if(val == null){\n                    return;\n                }\n                ChessService.undo(val).then((response) =>{\n                    if(response.status == 200){\n                    this.position = response.data.position;\n                    this.checkmateBlack = response.data.checkmateBlack;\n                    this.checkmateWhite = response.data.checkmateWhite;\n                }\n                })\n            },\n            async loadGame(val){\n                if(val == null){\n                    return;\n                }\n                ChessService.loadGame(val).then((response) =>{\n                    if(response.status == 200){\n                    this.position = response.data.position;\n                    this.checkmateBlack = response.data.checkmateBlack;\n                    this.checkmateWhite = response.data.checkmateWhite;\n                }\n                })\n            },\n            move(move, promotionType){\n                ChessService.putMove(move, promotionType).then((response) =>{\n                    if(response.status == 200){\n                        if(response.data != null){\n                            this.getPosition();\n                            if(response.data.possibleMoves != null && response.data.possibleMoves.length != 0){\n                                this.possibleMoves = response.data.possibleMoves;\n                                this.highlight = response.data.selected;\n                                this.checkmateBlack = response.data.checkmateBlack;\n                                this.checkmateWhite = response.data.checkmateWhite;\n                            }\n                            else{\n                                this.checkmateBlack = response.data.checkmateBlack;\n                                this.checkmateWhite = response.data.checkmateWhite;\n                                this.possibleMoves = [];\n                                this.highlight = 0;\n                            }\n                        }\n                    }\n                })\n            }\n        },\n        computed:{\n            checkmate:{\n                get(){\n                    return !this.checkmateBlack && !this.checkmateWhite;\n                }\n            }\n        },\n        created(){\n            this.getPosition();\n        }\n    }\n</script>\n"],"mappings":";;;;;;;;;;;;kEACoBA,SAAS,I,cAAzBC,mBAAA,CAEM,OAAAC,UAAA,GADFC,YAAA,CAA4JC,gBAAA;IAApJC,QAAQ,EAAEC,KAAA,CAAAD,QAAQ;IAAGE,cAAc,EAAED,KAAA,CAAAC,cAAc;IAAGC,cAAc,EAAEF,KAAA,CAAAE,cAAc;IAAGC,SAAS,EAAEH,KAAA,CAAAG,SAAS;IAAGC,aAAa,EAAEJ,KAAA,CAAAI;kJAEzIC,mBAAA,CAAsC;IAA7BC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,QAAA,CAAAC,IAAI;KAAK,MAAI,G,gBAC7BL,mBAAA,CAA8B;+DAAPM,IAAA,CAAAC,GAAG,GAAAJ,MAAA;iDAAHG,IAAA,CAAAC,GAAG,E;YAAnB;EAAoB,E,IAC3BP,mBAAA,CAAqC;IAA5BC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,QAAA,CAAAI,IAAI;KAAI,MAAI,GAE5BR,mBAAA,CAAgE,cAAhDL,KAAA,CAAAC,cAAc,I,cAAxBN,mBAAA,CAAoD,MAAAmB,UAAA,EAA1B,uBAAqB,K,qCACrDT,mBAAA,CAAgE,cAAhDL,KAAA,CAAAE,cAAc,I,cAAxBP,mBAAA,CAAoD,MAAAoB,UAAA,EAA1B,uBAAqB,K"},"metadata":{},"sourceType":"module","externalDependencies":[]}