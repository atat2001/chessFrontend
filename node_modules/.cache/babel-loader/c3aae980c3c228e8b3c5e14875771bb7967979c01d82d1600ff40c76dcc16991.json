{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Board = _resolveComponent(\"Board\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_Board, {\n    position: $data.position,\n    checkmateWhite: $data.checkmateWhite,\n    checkmateBlack: $data.checkmateBlack,\n    highlight: $data.highlight,\n    possibleMoves: $data.possibleMoves\n  }, null, 8 /* PROPS */, [\"position\", \"checkmateWhite\", \"checkmateBlack\", \"highlight\", \"possibleMoves\"]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"number\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.submiter = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.submiter]]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = $event => $options.undo($data.submiter))\n  })]);\n}","map":{"version":3,"names":["_createElementBlock","_createVNode","_component_Board","position","$data","checkmateWhite","checkmateBlack","highlight","possibleMoves","_createElementVNode","type","submiter","$event","onClick","_cache","$options","undo"],"sources":["/home/atoste/chessFrontend/src/components/Chess.vue"],"sourcesContent":["<template>\n\n   \n    <div>\n        <Board :position=\"position\" :checkmateWhite=\"checkmateWhite\" :checkmateBlack=\"checkmateBlack\" :highlight=\"highlight\" :possibleMoves=\"possibleMoves\"></Board>\n        <input type=\"number\" v-model=\"submiter\"/>\n        <button @click=\"undo(submiter)\"></button>\n    </div>\n</template>\n\n<script>\n    import ChessService from '../services/ChessService'\n    import Board from './Board.vue';\n    export default{\n        name: '',\n        data(){\n            return { \n                position: \"\",\n                checkmateWhite: false,\n                checkmateBlack: false,\n                submiter: Number,\n                possibleMoves: [],\n                highlight: 0,\n                    \n        }\n        },\n        components:{\n            Board,\n        },\n        methods: {\n            getPosition(){\n                ChessService.getPosition().then((response) =>{\n                    if(response.status == 200){\n                    this.position = response.data.position;\n                    this.checkmateBlack = response.data.checkmateBlack;\n                    this.checkmateWhite = response.data.checkmateWhite;\n                }\n                })\n            },\n            undo(val){\n                if(val == null){\n                    return;\n                }\n                ChessService.undo(val).then();\n                this.getPosition();\n            },\n            move(move){\n                ChessService.putMove(move).then((response) =>{\n                    if(response.status == 200){\n                        if(response.data != null){\n                            this.getPosition();\n                            if(response.data.possibleMoves != null){\n                                this.possibleMoves = response.data.possibleMoves;\n                                this.highlight = response.data.selected;\n                                this.checkmateBlack = response.data.checkmateBlack;\n                                this.checkmateWhite = response.data.checkmateWhite;\n                            }\n                            else{\n                                this.checkmateBlack = response.data.checkmateBlack;\n                                this.checkmateWhite = response.data.checkmateWhite;\n                                this.possibleMoves = [];\n                                this.highlight = 0;\n                            }\n                        }\n                    }\n                })\n            }\n        },  \n        created(){\n            this.getPosition();\n        }\n    }\n</script>\n"],"mappings":";;;uBAGIA,mBAAA,CAIM,cAHFC,YAAA,CAA4JC,gBAAA;IAApJC,QAAQ,EAAEC,KAAA,CAAAD,QAAQ;IAAGE,cAAc,EAAED,KAAA,CAAAC,cAAc;IAAGC,cAAc,EAAEF,KAAA,CAAAE,cAAc;IAAGC,SAAS,EAAEH,KAAA,CAAAG,SAAS;IAAGC,aAAa,EAAEJ,KAAA,CAAAI;2HACrIC,mBAAA,CAAyC;IAAlCC,IAAI,EAAC,QAAQ;+DAAUN,KAAA,CAAAO,QAAQ,GAAAC,MAAA;iDAARR,KAAA,CAAAO,QAAQ,E,GACtCF,mBAAA,CAAyC;IAAhCI,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAF,MAAA,IAAEG,QAAA,CAAAC,IAAI,CAACZ,KAAA,CAAAO,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}