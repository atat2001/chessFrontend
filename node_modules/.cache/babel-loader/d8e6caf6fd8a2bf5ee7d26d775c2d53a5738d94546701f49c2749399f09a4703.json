{"ast":null,"code":"import ChessService from '../services/ChessService';\nimport Board from './Board.vue';\nexport default {\n  name: '',\n  data() {\n    return {\n      position: \"\",\n      checkmateWhite: false,\n      checkmateBlack: false,\n      submiter: Number,\n      possibleMoves: [],\n      highlight: 0\n    };\n  },\n  components: {\n    Board\n  },\n  methods: {\n    getPosition() {\n      ChessService.getPosition().then(response => {\n        if (response.status == 200) {\n          this.position = response.data.position;\n          this.checkmateBlack = response.data.checkmateBlack;\n          this.checkmateWhite = response.data.checkmateWhite;\n        }\n      });\n    },\n    async undo(val) {\n      if (val == null) {\n        return;\n      }\n      ChessService.undo(val).then(response => {\n        if (response.status == 200) {\n          this.position = response.data.position;\n          this.checkmateBlack = response.data.checkmateBlack;\n          this.checkmateWhite = response.data.checkmateWhite;\n        }\n      });\n    },\n    move(move) {\n      ChessService.putMove(move).then(response => {\n        if (response.status == 200) {\n          if (response.data != null) {\n            this.getPosition();\n            if (response.data.possibleMoves != null && response.data.possibleMoves.length != 0) {\n              this.possibleMoves = response.data.possibleMoves;\n              this.highlight = response.data.selected;\n              this.checkmateBlack = response.data.checkmateBlack;\n              this.checkmateWhite = response.data.checkmateWhite;\n            } else {\n              this.checkmateBlack = response.data.checkmateBlack;\n              this.checkmateWhite = response.data.checkmateWhite;\n              this.possibleMoves = [];\n              this.highlight = 0;\n            }\n          }\n        }\n      });\n    }\n  },\n  computed: {\n    checkmate: {\n      get() {\n        return this.checkmateBlack || this.checkmateWhite;\n      }\n    }\n  },\n  created() {\n    this.getPosition();\n  }\n};","map":{"version":3,"names":["ChessService","Board","name","data","position","checkmateWhite","checkmateBlack","submiter","Number","possibleMoves","highlight","components","methods","getPosition","then","response","status","undo","val","move","putMove","length","selected","computed","checkmate","get","created"],"sources":["/home/atoste/chessFrontend/src/components/Chess.vue"],"sourcesContent":["<template>\n    <div :v-if=\"this.checkmate\">\n        <Board :position=\"position\" :checkmateWhite=\"checkmateWhite\" :checkmateBlack=\"checkmateBlack\" :highlight=\"highlight\" :possibleMoves=\"possibleMoves\"></Board>\n        <button @click=\"undo(1)\">undo</button>\n    </div>\n    <div> <h1 v-if=\"checkmateWhite\">congratulations white</h1></div>\n    <div> <h1 v-if=\"checkmateBlack\">congratulations black</h1></div>\n</template>\n\n<script>\n    import ChessService from '../services/ChessService'\n    import Board from './Board.vue';\n    export default{\n        name: '',\n        data(){\n            return { \n                position: \"\",\n                checkmateWhite: false,\n                checkmateBlack: false,\n                submiter: Number,\n                possibleMoves: [],\n                highlight: 0,\n                    \n        }\n        },\n        components:{\n            Board,\n        },\n        methods: {\n            getPosition(){\n                ChessService.getPosition().then((response) =>{\n                    if(response.status == 200){\n                    this.position = response.data.position;\n                    this.checkmateBlack = response.data.checkmateBlack;\n                    this.checkmateWhite = response.data.checkmateWhite;\n                }\n                })\n            },\n            async undo(val){\n                if(val == null){\n                    return;\n                }\n                ChessService.undo(val).then((response) =>{\n                    if(response.status == 200){\n                    this.position = response.data.position;\n                    this.checkmateBlack = response.data.checkmateBlack;\n                    this.checkmateWhite = response.data.checkmateWhite;\n                }\n                })\n            },\n            move(move){\n                ChessService.putMove(move).then((response) =>{\n                    if(response.status == 200){\n                        if(response.data != null){\n                            this.getPosition();\n                            if(response.data.possibleMoves != null && response.data.possibleMoves.length != 0){\n                                this.possibleMoves = response.data.possibleMoves;\n                                this.highlight = response.data.selected;\n                                this.checkmateBlack = response.data.checkmateBlack;\n                                this.checkmateWhite = response.data.checkmateWhite;\n                            }\n                            else{\n                                this.checkmateBlack = response.data.checkmateBlack;\n                                this.checkmateWhite = response.data.checkmateWhite;\n                                this.possibleMoves = [];\n                                this.highlight = 0;\n                            }\n                        }\n                    }\n                })\n            }\n        },\n        computed:{\n            checkmate:{\n                get(){\n                    return this.checkmateBlack || this.checkmateWhite;\n                }\n            }\n        },\n        created(){\n            this.getPosition();\n        }\n    }\n</script>\n"],"mappings":"AAUI,OAAOA,YAAW,MAAO,0BAAyB;AAClD,OAAOC,KAAI,MAAO,aAAa;AAC/B,eAAc;EACVC,IAAI,EAAE,EAAE;EACRC,IAAIA,CAAA,EAAE;IACF,OAAO;MACHC,QAAQ,EAAE,EAAE;MACZC,cAAc,EAAE,KAAK;MACrBC,cAAc,EAAE,KAAK;MACrBC,QAAQ,EAAEC,MAAM;MAChBC,aAAa,EAAE,EAAE;MACjBC,SAAS,EAAE;IAEnB;EACA,CAAC;EACDC,UAAU,EAAC;IACPV;EACJ,CAAC;EACDW,OAAO,EAAE;IACLC,WAAWA,CAAA,EAAE;MACTb,YAAY,CAACa,WAAW,EAAE,CAACC,IAAI,CAAEC,QAAQ,IAAI;QACzC,IAAGA,QAAQ,CAACC,MAAK,IAAK,GAAG,EAAC;UAC1B,IAAI,CAACZ,QAAO,GAAIW,QAAQ,CAACZ,IAAI,CAACC,QAAQ;UACtC,IAAI,CAACE,cAAa,GAAIS,QAAQ,CAACZ,IAAI,CAACG,cAAc;UAClD,IAAI,CAACD,cAAa,GAAIU,QAAQ,CAACZ,IAAI,CAACE,cAAc;QACtD;MACA,CAAC;IACL,CAAC;IACD,MAAMY,IAAIA,CAACC,GAAG,EAAC;MACX,IAAGA,GAAE,IAAK,IAAI,EAAC;QACX;MACJ;MACAlB,YAAY,CAACiB,IAAI,CAACC,GAAG,CAAC,CAACJ,IAAI,CAAEC,QAAQ,IAAI;QACrC,IAAGA,QAAQ,CAACC,MAAK,IAAK,GAAG,EAAC;UAC1B,IAAI,CAACZ,QAAO,GAAIW,QAAQ,CAACZ,IAAI,CAACC,QAAQ;UACtC,IAAI,CAACE,cAAa,GAAIS,QAAQ,CAACZ,IAAI,CAACG,cAAc;UAClD,IAAI,CAACD,cAAa,GAAIU,QAAQ,CAACZ,IAAI,CAACE,cAAc;QACtD;MACA,CAAC;IACL,CAAC;IACDc,IAAIA,CAACA,IAAI,EAAC;MACNnB,YAAY,CAACoB,OAAO,CAACD,IAAI,CAAC,CAACL,IAAI,CAAEC,QAAQ,IAAI;QACzC,IAAGA,QAAQ,CAACC,MAAK,IAAK,GAAG,EAAC;UACtB,IAAGD,QAAQ,CAACZ,IAAG,IAAK,IAAI,EAAC;YACrB,IAAI,CAACU,WAAW,EAAE;YAClB,IAAGE,QAAQ,CAACZ,IAAI,CAACM,aAAY,IAAK,IAAG,IAAKM,QAAQ,CAACZ,IAAI,CAACM,aAAa,CAACY,MAAK,IAAK,CAAC,EAAC;cAC9E,IAAI,CAACZ,aAAY,GAAIM,QAAQ,CAACZ,IAAI,CAACM,aAAa;cAChD,IAAI,CAACC,SAAQ,GAAIK,QAAQ,CAACZ,IAAI,CAACmB,QAAQ;cACvC,IAAI,CAAChB,cAAa,GAAIS,QAAQ,CAACZ,IAAI,CAACG,cAAc;cAClD,IAAI,CAACD,cAAa,GAAIU,QAAQ,CAACZ,IAAI,CAACE,cAAc;YACtD,OACI;cACA,IAAI,CAACC,cAAa,GAAIS,QAAQ,CAACZ,IAAI,CAACG,cAAc;cAClD,IAAI,CAACD,cAAa,GAAIU,QAAQ,CAACZ,IAAI,CAACE,cAAc;cAClD,IAAI,CAACI,aAAY,GAAI,EAAE;cACvB,IAAI,CAACC,SAAQ,GAAI,CAAC;YACtB;UACJ;QACJ;MACJ,CAAC;IACL;EACJ,CAAC;EACDa,QAAQ,EAAC;IACLC,SAAS,EAAC;MACNC,GAAGA,CAAA,EAAE;QACD,OAAO,IAAI,CAACnB,cAAa,IAAK,IAAI,CAACD,cAAc;MACrD;IACJ;EACJ,CAAC;EACDqB,OAAOA,CAAA,EAAE;IACL,IAAI,CAACb,WAAW,EAAE;EACtB;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}