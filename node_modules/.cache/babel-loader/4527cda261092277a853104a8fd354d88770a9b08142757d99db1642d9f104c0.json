{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createVNode as _createVNode, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"chessBoard\"\n};\nconst _hoisted_2 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Piece = _resolveComponent(\"Piece\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", _hoisted_1, [(_openBlock(), _createElementBlock(_Fragment, null, _renderList(64, n => {\n    return _createElementVNode(\"div\", {\n      key: $options.getKey(n),\n      class: _normalizeClass({\n        buttonWhite: $options.getKey(n) % 2 == 0,\n        buttonBlack: $options.getKey(n) % 2 == 1\n      }),\n      onClick: $event => $options.move($options.getKey(n))\n    }, [_createVNode(_component_Piece, {\n      style: {\n        \"align-items\": \"center\"\n      },\n      id: $options.getKey(n)\n    }, null, 8 /* PROPS */, [\"id\"])], 10 /* CLASS, PROPS */, _hoisted_2);\n  }), 64 /* STABLE_FRAGMENT */))]), _createElementVNode(\"div\", null, [_createElementVNode(\"h1\", null, _toDisplayString($props.position), 1 /* TEXT */)])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementVNode","_hoisted_1","_createElementBlock","_Fragment","_renderList","n","key","$options","getKey","_normalizeClass","buttonWhite","buttonBlack","onClick","$event","move","_createVNode","_component_Piece","style","id","_toDisplayString","$props","position"],"sources":["/home/atoste/chessFrontend/src/components/Board.vue"],"sourcesContent":["<template>\n        <div class=\"chessBoard\">\n        <div v-for=\"n in 64\" v-bind:key=\"getKey(n)\" :class=\"{buttonWhite: getKey(n) % 2 == 0, buttonBlack: getKey(n) % 2 == 1}\"   @click=\"move(getKey(n))\">\n        <Piece style=\"align-items: center;\" :id=\"getKey(n)\"></Piece>\n        </div>\n        </div>\n        <div>\n        <h1>{{ position }}</h1></div>\n\n</template>\n\n<script>\n    import ChessService from '../services/ChessService'\n    import Piece from './Piece.vue'\n    const PieceType = {\n        None: 0,\n        WPawn: 1,\n        WRook: 2,\n        WKnight: 3,\n        WBishop: 4,\n        WQueen: 5,\n        WKing: 6,\n        BPawn: 11,\n        BRook: 12,\n        BKnight: 13,\n        BBishop: 14,\n        BQueen: 15,\n        BKing: 16,\n\n    }\n    export default{\n        name: '',\n        data(){\n            return {\n                isWhite: true,\n                castle:[true,true,true,true],\n                enPassant: null,\n                lastClicked: [0,0]\n            }\n        },\n        props:{\n            position:\"\",\n        },\n        components:{\n            Piece\n        },\n        methods:{\n            printId(key){\n                console.log(key)\n            },\n            move(move){\n                ChessService.putMove(move).then((response) =>{\n                    if(response.status == 200){\n                        console.log(response);\n                        if(response.data == 1){\n                            this.$parent.getPosition();\n                        }\n                    }\n                    else{\n                        console.log(response);\n                    }\n                })\n            },\n            \n            getKey(n){\n                return ((8-Math.floor((n-1)/8)) + 10 * ((n-1)%8 + 1));\n            }\n        },\n        computed:{\n            positionList(){\n                var returner = [];\n                const size = position.size();\n                var i = 0;\n                while(i < size){\n                    switch(position[i]){\n                        case '/':\n                            i++;\n                            break;\n                        case 'p':\n                            returner[i] = PieceType.BPawn;\n                            i++;\n                            break;\n                        case 'P':\n                            returner[i] = PieceType.WPawn;\n                            i++;\n                            break;\n                        case 'r':\n                            returner[i] = PieceType.BRook;\n                            i++;\n                            break;\n                        case 'R':\n                            returner[i] = PieceType.WRook;\n                            i++;\n                            break;\n                        case 'k':\n                            returner[i] = PieceType.BKnight;\n                            i++;\n                            break;\n                        case 'K':\n                            returner[i] = PieceType.WKnight;\n                            i++;\n                            break;\n                        case 'b':\n                            returner[i] = PieceType.BBishop;\n                            i++;\n                            break;\n                        case 'B':\n                            returner[i] = PieceType.WBishop;\n                            i++;\n                            break;\n\n                        case 'q':\n                            returner[i] = PieceType.BKnight;\n                            i++;\n                            break;\n                        case 'Q':\n                            returner[i] = PieceType.WKnight;\n                            i++;\n                            break;\n                        case 'k':\n                            returner[i] = PieceType.BBishop;\n                            i++;\n                            break;\n                        case 'K':\n                            returner[i] = PieceType.WBishop;\n                            i++;\n                            break;\n\n                    \n\n                    }\n                }\n            }\n        }\n    }\n</script>\n\n<style>\n.buttonWhite {\n    border: 1px outset gray;\n    background-color: white;\n    width: min(12.5vh, 12.5vw);\n    height: min(12.5vh, 12.5vw);\n    cursor:pointer;\n}\n.buttonBlack {\n    border: 1px outset gray;\n    background-color: black;\n    width: min(12.5vh, 12.5vw);\n    height: min(12.5vh, 12.5vw);\n    cursor:pointer;\n}\n.chessBoard{\n    width: min(100vh, 100vw);\n    height: min(100vh, 100vw);\n    margin-left: auto;\n    margin-right: auto;\n    background: brown;\n    display: grid;\n    grid-template-columns: repeat(8,1fr);\n}\n\n\n</style>\n\n"],"mappings":";;EACaA,KAAK,EAAC;AAAY;;;;6DAAvBC,mBAAA,CAIM,OAJNC,UAIM,I,cAHNC,mBAAA,CAEMC,SAAA,QAAAC,WAAA,CAFW,EAAE,EAAPC,CAAC;WAAbL,mBAAA,CAEM;MAFsBM,GAAG,EAAEC,QAAA,CAAAC,MAAM,CAACH,CAAC;MAAIN,KAAK,EAAAU,eAAA;QAAAC,WAAA,EAAgBH,QAAA,CAAAC,MAAM,CAACH,CAAC;QAAAM,WAAA,EAAyBJ,QAAA,CAAAC,MAAM,CAACH,CAAC;MAAA;MAAgBO,OAAK,EAAAC,MAAA,IAAEN,QAAA,CAAAO,IAAI,CAACP,QAAA,CAAAC,MAAM,CAACH,CAAC;QAC/IU,YAAA,CAA4DC,gBAAA;MAArDC,KAA4B,EAA5B;QAAA;MAAA,CAA4B;MAAEC,EAAE,EAAEX,QAAA,CAAAC,MAAM,CAACH,CAAC;;oCAGjDL,mBAAA,CAC6B,cAA7BA,mBAAA,CAAuB,YAAAmB,gBAAA,CAAhBC,MAAA,CAAAC,QAAQ,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}