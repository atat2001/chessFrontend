{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Board = _resolveComponent(\"Board\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", null, [_createVNode(_component_Board, {\n    position: $data.position\n  }, null, 8 /* PROPS */, [\"position\"])]), $data.checkmateBlack ? (_openBlock(), _createElementBlock(\"h1\", _hoisted_1, \"black\")) : _createCommentVNode(\"v-if\", true), $data.checkmateWhite ? (_openBlock(), _createElementBlock(\"h1\", _hoisted_2, \"white\")) : _createCommentVNode(\"v-if\", true)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","_createVNode","_component_Board","position","$data","checkmateBlack","_createElementBlock","_hoisted_1","checkmateWhite","_hoisted_2"],"sources":["/home/atoste/chessFrontend/src/components/Chess.vue"],"sourcesContent":["<template>\n\n   \n    <div>\n        <Board :position=\"position\"></Board>\n\n    </div>\n    <h1 v-if=\"checkmateBlack\">black</h1>\n\n    <h1 v-if=\"checkmateWhite\">white</h1>\n</template>\n\n<script>\n    import ChessService from '../services/ChessService'\n    import Board from './Board.vue';\n    export default{\n        name: '',\n        data(){\n            return { \n                position: \"\",\n                checkmateWhite: false,\n                checkmateBlack: false\n                    \n        }\n        },\n        components:{\n            Board,\n        },\n        methods: {\n            getPosition(){\n                ChessService.getPosition().then((response) =>{\n                    if(response.status == 200){\n                    this.position = response.data.position;\n                    this.checkmateBlack = response.data.checkmateBlack;\n                    this.checkmateWhite = response.data.checkmateWhite;\n                }\n                })\n            }\n        },  \n        created(){\n            this.getPosition();\n        }\n    }\n</script>\n"],"mappings":";;;;;;;;;6DAGIA,mBAAA,CAGM,cAFFC,YAAA,CAAoCC,gBAAA;IAA5BC,QAAQ,EAAEC,KAAA,CAAAD;EAAQ,sC,GAGpBC,KAAA,CAAAC,cAAc,I,cAAxBC,mBAAA,CAAoC,MAAAC,UAAA,EAAV,OAAK,K,mCAErBH,KAAA,CAAAI,cAAc,I,cAAxBF,mBAAA,CAAoC,MAAAG,UAAA,EAAV,OAAK,K"},"metadata":{},"sourceType":"module","externalDependencies":[]}